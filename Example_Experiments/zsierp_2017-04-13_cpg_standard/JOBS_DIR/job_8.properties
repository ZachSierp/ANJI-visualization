#Generated Parameters
random.seed=7
### Values at top of file can/should be changed ###
# seeding number, can be removed like here and added to UROC_PARAMETER_LIST file to go over a
# range of values

###NUMBER OF GENERATIONS
num.generations=100
###NUMBER OF NETWORKS TO EVOLVE EACH GENERATIONS
popul.size=100

#PENALTY FOR EACH NODE/CONNECTION ON FITNESS = 1 is a good value
fitness.function.adjust.for.network.size.factor=1.0

#NUMBER OF TICKS FOR EACH CYCLE
gasneat.hardcode.cycles.per.timestep=3

#####################################
#                                   #
#         MUTATIONS                 #
#     0 means it never happens      #
#     1 means it happens constantly #
#####################################

##################################
#                                #
# STANDARD NETWORK MUTATIONS     #
#                                #
##################################
#Add a single new connections randomly in the network
gasneat.add.connection.mutation.rate=0.01

#Randomly removes connections
gasneat.remove.connection.mutation.rate=0.01

#Will not remove connections if they are too strong
gasneat.remove.connection.max.weight=10.0

#Add a random neuron
gasneat.add.neuron.mutation.rate=0.01

#Change a random weight in the network
gasneat.weight.mutation.rate=0.1
gasneat.weight.mutation.std.dev=1.5

###########################################
#                                         #
# MODULATORY TOPOLOGICAL (POINT TO POINT) #
# NETWORK MUTATIONS                       #
#                                         #
###########################################

#this will add a new neuromodulatory neuron that has modulatory synaptic connections
gasneat.add.topological.modulating.neuron.mutation.rate=0.01


#This will change the type of signal (gas) that a neuron produces
#This mutation is likely to damage the fitness of a network, but also may be necessary for very small networks
#Better to use the mutaton above instead
gasneat.neuron.synaptic.gas.mutation.rate=0.0


###########################################
#                                         #
# MODULATORY GAS (SPATIAL BASED)          #
# NETWORK MUTATIONS                       #
#                                         #
###########################################
gasneat.add.spatial.modulating.neuron.mutation.rate=0.01
gasneat.emission.mutation.std.dev=0.15
gasneat.neuron.emission.rate.mutation.rate=0.1
gasneat.gas.decay=0.1
gasneat.init.emission.radius=300

#This changes the gas that a pre-existing neuron produces and is likely to harm fitness
#Better to use the add.spatial from above instead
gasneat.neuron.gas.mutation.rate=0.0

##########################
#                        #
# RECEPTOR MUTATIONS     #
#                        #
##########################

#Go into here   /nobackup/$USER/UROC_EXPERIMENTS/JARS/receptor_maps
#To add other receptor maps
#
#  G0_G1_G2_G3_G4   = receptor for neuron modulated differently by 5 different gases
#  G1_NO_NO_NO_NO   = receptor for neuron activated by G1 gas and not modulated
#
gasneat.receptor.map.file=receptor_maps/all_on.txt
gasneat.neuron.receptor.mutation.rate=0.0

################
# network arch #
################

# This is the speed at which gas will propagate through the network
# The inputs neurons are 200 away from the output
gasneat.gas.speed=50

#This is how quickly the gas will dissipate each timestep
gasneat.gas.decay=0.1

#This is the radius within which gas is produced
gasneat.init.emission.radius=300

# If this is set to be true, then the network starts out with all inputs
# connected to outputs usually set to false
initial.topology.fully.connected=false

##################################
#                                #
#      Synaptic Plasticity       #
#      (Learning/Weight changes) #
#                                #
##################################

#This allows the evolution of platicity rules
gasneat.plasticity.rules.mutation.rate=0

#Synaptic Plasticity Parameters
# pre=presynaptic activation, post=postsynaptic activation
#
# change in weight =  LearningRate * ( A * (pre*post)+ B*pre + C*post + D )
# default settings are for Hebbian plasticity settings
gasneat.plasticity.parameter.a=1
gasneat.plasticity.parameter.b=-0.5
gasneat.plasticity.parameter.c=-0.5
gasneat.plasticity.parameter.d=0.25
gasneat.plasticity.parameter.learning.rate=1.0

#Rate at which synaptic weights automatically lose strength, can be set to zero to turn off
gasneat.hebbian.decay.rate=0.0

#This means that weights can only change when modulatory gas/connections are present
gasneat.neuromodulated.plasticity=true

#THIS PREVENT MODULATORY SYNAPSES FROM CHANGING WEIGHT (ADVISED TO BE FALSE)
gasneat.frozen.modulatory.synapses=false

##################################
# stimuli, targets, activations  #
##################################
#THIS IS HOW MANY INPUT NEURONS THERE ARE (number of entries on each line in STIMULI FILE)
stimulus.size=1
stimuli.file=experiments/UROC_STIMULI/stimuli_cpg_standard.txt

#THIS IS HOW MANY OUTPUT NEURONS THERE ARE (number of entries on each line in TARGETS FILE)
response.size=1
targets.file=experiments/UROC_TARGETS/targets_cpg_standard.txt

#This is the recommended setting, "sigmoid" and "tanh" are also possible options
#INPUT NEURONS WILL BE OF THIS TYPE
initial.topology.activation.input=linear

#NEWLY ADDED NEURONS WILL BE OF THIS TYPE
initial.topology.activation=linear
#initial.topology.activation=sigmoid   MIN 0,  MAX 1, DEFAULT 0.5
#initial.topology.activation=tanh      MIN -1, MAX 1, DEFAULT 0.0

############## REMOVE NEURON MUTATIONS #################B
#New mutation that will prune neurons randomly, helping to drive down the network size
gasneat.remove.neuron.mutation.rate=0.1
gasneat.remove.neuron.max.degree=4

###########SETUP######### 

#To randomize the receptors of input and newly added neurons
gasneat.randomize.input.receptors.rate=0.0
gasneat.randomize.receptors.rate=0.0

#To randomize the gases produced by input and newly added neurons
gasneat.randomize.input.gas.emitted.rate=0.0
gasneat.randomize.synaptic.gas.rate=0.0

#To randomize the signals sent on synaptic connections from input and newly added neurons
gasneat.randomize.input.gas.emitted.rate=0.0
gasneat.randomize.synaptic.gas.rate=0.0

###########################################################################################
###########################################################################################
###########################################################################################
#                                                                                         #
#                     DO NOT CHANGE BELOW THIS POINT!                                     #
#                                                                                         #
###########################################################################################
###########################################################################################
###########################################################################################

############################################# GENERATIONS, ONLY INTRODUCE MUTATIONS AFTER GENERATION#
gasneat.add.neuron.mutation.generation=0
gasneat.add.spatial.modulating.neuron.generation=0
gasneat.add.topological.modulating.neuron.mutation.generation=0
gasneat.add.gas.neuron.mutation.generation=0

gasneat.tanh.squash.modulatory.signal=false
gasneat.noise.level=0.0

#############
# persistence
############# 
persistence.class=com.anji.persistence.FilePersistence
persistence.base.dir=../EXPERIMENTS/zsierp_2017-04-13_cpg_standard/DATA_DIR/job_8
persist.all=false
persist.champions=true
persist.last=true
id.file=../EXPERIMENTS/zsierp_2017-04-13_cpg_standard/DATA_DIR/job_8/id.xml
neat.id.file=../EXPERIMENTS/zsierp_2017-04-13_cpg_standard/DATA_DIR/job_8/neatid.xml
presentation.dir=../EXPERIMENTS/zsierp_2017-04-13_cpg_standard/DATA_DIR/job_8/nevt

#########
# logging
#########
log4j.rootLogger=INFO, A1
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%-5p %m%x%n


#################
# gasneat/anji specifications
#################
recurrent=best_guess
ann.type=gasneat

###############
run.name=0
run.reset=true


gasneat.prune.mutation.rate=1.0
gasneat.gas.count=4

#synaptic weight bounds
weight.max=10.0
weight.min=-10.0


survival.rate=0.2
selector.elitism=true
selector.roulette=false
selector.elitism.min.specie.size=1

############
# speciation
############
chrom.compat.excess.coeff=1.0
chrom.compat.disjoint.coeff=1.0
chrom.compat.common.coeff=0.04
speciation.threshold=0.2


##################
# fitness function
##################

fitness_function.class=gasNEAT.targetSequence.TargetSequenceFitnessFunction
targets.range=0.02
fitness.threshold=950.0
fitness.target=998.0


#initial plasticity is the learning rate
gasneat.initial.plasticity=0.0
gasneat.maximal.plasticity=1.0
gasneat.minimal.plasticity=-1.0

gasneat.custom.init=false

#Activation specs
gasneat.sigmoid.curve.parameter=5

gasneat.activation.modulation.enabled=true

#Neuromodulation settings
gasneat.plasticity.modulation.enabled=true

initial.topology.num.hidden.neurons=0

#DO NOT USE THIS
gasneat.add.gas.neuron.mutation.rate=0.0

#LEAVE THIS AT ZERO
gasneat.extra.recurrent.cycles=0

